#!/usr/bin/env node

'use strict';
var path = require('path'),
    fs = require('fs'),
    url = require('url'),
    gfo = require(path.join(path.dirname(fs.realpathSync(__filename)), '../index.js')),
	urls=[],
    urlToProcess;

process.argv.forEach(function(arg) {
	
    var keyVal = arg.split('='),
        isGoogleFontsUrl = false;

    if (keyVal[0] == 'outDir') {
        gfo.setOutputDir(keyVal[1]);
        return;
    }

    if (keyVal[0] == 'outCss') {
        gfo.setCssFilename(keyVal[1]);
        return;
    }

    isGoogleFontsUrl = url.parse(arg).hostname == 'fonts.googleapis.com';
	
    if (isGoogleFontsUrl) {
        urlToProcess = arg;
		var fontSize = urlToProcess.lastIndexOf(':');
		if( fontSize > 5){
			var getSizes = urlToProcess.substring(fontSize + 1);
			if(getSizes.indexOf(',')>-1){
				var prefixUrl = urlToProcess.substring(0,fontSize+1);
				var fsz = getSizes.split(',');
				if(fsz.length > 1){
					for( var i = 0; i < fsz.length; i++ ){
						urls.push(prefixUrl + fsz[i]);
					}
				}
			}
		}
    }
});

if (!urlToProcess) {
    console.log();
    console.log('  No job found. Use URL like it Google Fonts says as script argument.');
    console.log();
    console.log('  Usage:');
    console.log('    goofoffline [outDir=fonts] [outCss=fonts.css] fontUrl');
    console.log();
    console.log('  Example:');
    console.log('    goofoffline "http://fonts.googleapis.com/css?family=Open+Sans|Roboto"');
    console.log();

    process.exit(0);
}

if(urls.length>0)
	gfo.multidownload(urls);
else
	gfo.download(urlToProcess);


